name: PR Analysis Workflow

on:
  pull_request:
    types: [opened, synchronize, closed]

permissions:
  pull-requests: write

jobs:
  analyze_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Send PR details to FastAPI server
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          PR_STATUS: ${{ github.event.action }}
          REPO_URL: ${{ github.event.pull_request.head.repo.clone_url }}  # Repository clone URL
        run: |
          import requests
          import os
          import json

          payload = {
              "repo_url": os.environ['REPO_URL'],
              "pr_number": os.environ['PR_NUMBER'],
              "pr_url": os.environ['PR_URL'],
              "pr_title": os.environ['PR_TITLE'],
              "pr_author": os.environ['PR_AUTHOR'],
              "pr_status": os.environ['PR_STATUS']
          }

          response = requests.post("https://1cb1-2403-a080-833-43a8-4c63-63e7-9150-76f.ngrok-free.app/webhook", json=payload)
          response_text = response.text

          with open(os.environ['GITHUB_ENV'], "a") as env_file:
              env_file.write(f"RESPONSE_TEXT={response_text}\n")
        shell: python

      - name: Post response as a comment on PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RESPONSE_TEXT: ${{ env.RESPONSE_TEXT }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues/$PR_NUMBER/comments \
          -d "$(jq -n --arg body "**Analysis Result:**\n\n${{ env.RESPONSE_TEXT }}" '{body: $body}')"



